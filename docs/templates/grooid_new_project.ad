=== App

NOTE: latest `grooid-new-project` version is: {grooid-new-project}

Weâ€™re now ready to create the project. You can list all available
templates from the command line with:

[source, shell]
----
$ lazybones list
Available templates in marioggar/grooid-templates:

marioggar/grooid-new-project
marioggar/grooid-new-library
----

And then create a new project by executing:

[source, shell, subs="attributes"]
----
$ lazybones create grooid-new-project newandroidproject

Creating project from template grooid-new-project {grooid-new-project} in 'newandroidproject'
DEFAULT source code package ? [grooid.app]:
MIN version of SDK you want to target ? [19]:
MAX version of SDK you want to target ? [21]:
DEFAULT version for Android Build Tools ? [22.0.1]:
DEFAULT version for Android support v4 ? [21.0.0]:

What is newandroidproject
--------------------------------------

You've just created a basic Android-Groovy application. It provides a standard project structure and
a basic Gradle plugin. Now is up to you to add your source files and edit them with Android Studio
and have fun :)


Project created in newandroidproject!

----

WARNING: Version 1.1+ of *grooid-templates* only works for Android Studio 1.0.1+ if you want to use
Android Studio 0.8.x see <<astudio,Android Studio section>> for more details

Once you've created your project now you can import it in Android Studio. Unfortunately Android Studio
can't recognize a Gradle project as an Android app directly so you have to import it as a
*"import Non-Android Studio project"*.

image::imgs/as_1.0/as_import_project.png[width=500, align=center]

Then you should select the directory with the Gradle project.

image::imgs/as_1.0/as_import_project_select.png[width=500, align=center]

Because the project has a embeded Gradle wrapper Android Studio will load that version in order to
build the project.

Once the project has been loaded your Android view should look like this:

image::imgs/as_1.0/as_import_project_end.png[width=500, align=center]